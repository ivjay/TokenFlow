{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://Z%3A/blockchain/project/ttoken/TokenFlow/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://Z%3A/blockchain/project/ttoken/TokenFlow/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://Z%3A/blockchain/project/ttoken/TokenFlow/frontend/components/users/theme.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/users/theme.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/users/theme.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://Z%3A/blockchain/project/ttoken/TokenFlow/frontend/components/users/theme.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/users/theme.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/users/theme.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file://Z%3A/blockchain/project/ttoken/TokenFlow/frontend/components/users/navbar.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"../ui/button\";\r\nimport ThemeToggle from \"./theme\";\r\nimport { ethers } from \"ethers\";\r\n\r\nexport default function Navbar() {\r\n  const [wallet, setWallet] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const checkWalletConnection = async () => {\r\n      if (window.ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const accounts = await provider.listAccounts();\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0]);\r\n        }\r\n      }\r\n    };\r\n\r\n    checkWalletConnection();\r\n\r\n    // Optionally, listen for account changes\r\n    window.ethereum.on('accountsChanged', (accounts: string[]) => {\r\n      if (accounts.length > 0) {\r\n        setWallet(accounts[0]);\r\n      } else {\r\n        setWallet(null);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleConnect = async () => {\r\n    if (window.ethereum) {\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\r\n      setWallet(accounts[0]);\r\n    }\r\n  };\r\n\r\n  const handleDisconnect = () => {\r\n    setWallet(null); // Disconnect the wallet by resetting the state\r\n  };\r\n\r\n  return (\r\n    <nav className=\"shadow-md\">\r\n      <div className=\"max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4\">\r\n        <Link href=\"/dashboard\" className=\"self-center text-2xl font-semibold whitespace-nowrap dark:text-white\">\r\n          TokenFlow\r\n        </Link>\r\n      \r\n        <div className=\"flex space-x-12\">\r\n          <Link href=\"/dashboard/payments\" className=\"font-semibold hover:text-blue-700\">\r\n            Payment\r\n          </Link>\r\n          <Link href=\"/dashboard/transaction\" className=\"font-semibold hover:text-blue-700\">\r\n            History\r\n          </Link>\r\n          <Link href=\"/dashboard/nft_Receipt\" className=\"font-semibold hover:text-blue-700\">\r\n            Receipt\r\n          </Link>\r\n          <Link href=\"/dashboard/wallet\" className=\"font-semibold hover:text-blue-700\">\r\n            Wallet\r\n          </Link>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <ThemeToggle />\r\n          <Button\r\n            variant=\"outline\"\r\n            className=\"font-semibold\"\r\n            onClick={wallet ? handleDisconnect : handleConnect}\r\n          >\r\n            {wallet ? \"Disconnect\" : \"Connect\"}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEpD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,wBAAwB;YAC5B,IAAI,OAAO,QAAQ,EAAE;gBACnB,MAAM,WAAW,IAAI,gLAAA,CAAA,SAAM,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,QAAQ;gBAClE,MAAM,WAAW,MAAM,SAAS,YAAY;gBAC5C,IAAI,SAAS,MAAM,GAAG,GAAG;oBACvB,UAAU,QAAQ,CAAC,EAAE;gBACvB;YACF;QACF;QAEA;QAEA,yCAAyC;QACzC,OAAO,QAAQ,CAAC,EAAE,CAAC,mBAAmB,CAAC;YACrC,IAAI,SAAS,MAAM,GAAG,GAAG;gBACvB,UAAU,QAAQ,CAAC,EAAE;YACvB,OAAO;gBACL,UAAU;YACZ;QACF;IACF,GAAG,EAAE;IAEL,MAAM,gBAAgB;QACpB,IAAI,OAAO,QAAQ,EAAE;YACnB,MAAM,WAAW,IAAI,gLAAA,CAAA,SAAM,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,QAAQ;YAClE,MAAM,WAAW,MAAM,SAAS,IAAI,CAAC,uBAAuB,EAAE;YAC9D,UAAU,QAAQ,CAAC,EAAE;QACvB;IACF;IAEA,MAAM,mBAAmB;QACvB,UAAU,OAAO,+CAA+C;IAClE;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAK,MAAK;oBAAa,WAAU;8BAAuE;;;;;;8BAIzG,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAK,MAAK;4BAAsB,WAAU;sCAAoC;;;;;;sCAG/E,8OAAC;4BAAK,MAAK;4BAAyB,WAAU;sCAAoC;;;;;;sCAGlF,8OAAC;4BAAK,MAAK;4BAAyB,WAAU;sCAAoC;;;;;;sCAGlF,8OAAC;4BAAK,MAAK;4BAAoB,WAAU;sCAAoC;;;;;;;;;;;;8BAI/E,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,6HAAA,CAAA,UAAW;;;;;sCACZ,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,WAAU;4BACV,SAAS,SAAS,mBAAmB;sCAEpC,SAAS,eAAe;;;;;;;;;;;;;;;;;;;;;;;AAMrC"}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file://Z%3A/blockchain/project/ttoken/TokenFlow/frontend/app/dashboard/layout.tsx"],"sourcesContent":["import Navbar from \"@/components/users/navbar\";\r\n\r\nexport default function Layout({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,OAAO,EAAE,QAAQ,EAAiC;IACxE,qBACE;;0BACE,8OAAC,8HAAA,CAAA,UAAM;;;;;YACN;;;AAGP"}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}