{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://Z%3A/blockchain/project/ttoken/TokenFlow/frontend/app/dashboard/getToken/page.tsx"],"sourcesContent":["// pages/get-token.js\r\n\r\nimport { useState } from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\nexport default function GetTokenPage() {\r\n  const [email, setEmail] = useState(\"\")\r\n  const [walletAddress, setWalletAddress] = useState(\"\")\r\n\r\n  const handleSubmit = (e: { preventDefault: () => void }) => {\r\n    e.preventDefault()\r\n    alert(\"Token request submitted successfully!\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen\">\r\n      <form onSubmit={handleSubmit} className=\"p-8 border rounded-md shadow-lg bg-white\">\r\n        <h2 className=\"text-2xl font-bold mb-6\">Request Your Token</h2>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email Address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            className=\"mt-2 p-2 border border-gray-300 rounded-md w-full\"\r\n            placeholder=\"Enter your email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"walletAddress\" className=\"block text-sm font-medium text-gray-700\">Wallet Address</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"walletAddress\"\r\n            value={walletAddress}\r\n            onChange={(e) => setWalletAddress(e.target.value)}\r\n            required\r\n            className=\"mt-2 p-2 border border-gray-300 rounded-md w-full\"\r\n            placeholder=\"Enter your wallet address\"\r\n          />\r\n        </div>\r\n\r\n        <Button type=\"submit\" className=\"w-full\">\r\n          Request Token\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AAErB;AACA;;;;AAEe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,MAAM;IACR;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAK,UAAU;YAAc,WAAU;;8BACtC,8OAAC;oBAAG,WAAU;8BAA0B;;;;;;8BAExC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,SAAQ;4BAAQ,WAAU;sCAA0C;;;;;;sCAC3E,8OAAC;4BACC,MAAK;4BACL,IAAG;4BACH,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,QAAQ;4BACR,WAAU;4BACV,aAAY;;;;;;;;;;;;8BAIhB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,SAAQ;4BAAgB,WAAU;sCAA0C;;;;;;sCACnF,8OAAC;4BACC,MAAK;4BACL,IAAG;4BACH,OAAO;4BACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;4BAChD,QAAQ;4BACR,WAAU;4BACV,aAAY;;;;;;;;;;;;8BAIhB,8OAAC,2HAAA,CAAA,SAAM;oBAAC,MAAK;oBAAS,WAAU;8BAAS;;;;;;;;;;;;;;;;;AAMjD"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file://Z%3A/blockchain/project/ttoken/TokenFlow/frontend/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA6BA,OAAO,MAAMM,eAAe;AAH5B,8BAA8B;AAzB9B,SAASN,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAapBM,WAAWC;AAKb,4DAA4D;;;;;;;;;;;AAC5D,OAAO,MAAMC,cAAc,IAAIX,mBAAmB,uBAAA;IAChDY,MAAAA,MAAY;QACVC,KAAAA;IAAMZ;IAAAA,MAAUa,QAAQ;gBACxBC,IAAAA;YAAAA,CAAM;YAAA;wBACNC,IAAAA;oBAAAA,KAAU;oBAAA;gCACV,IAAA;4BAAA;4BAAA,0BAA2C;iCAC3CC,YAAY;sCACZC,IAAAA,CAAAA,GAAU;gCAAA,QAAA;oCAAA,IAAA;oCAAA;iCAAA;;+BACVC,UAAU,EAAE;;qBACd;0BACAC,QAAAA,CAAU,CAAA;oBAAA;iBAAA;;iBACRC,YAAYnB;kBACd,QAAA,CAAA;gBAAA,UAAA;oBAAA,IAAA;oBAAA;iBAAA;YACF;SAAA,CAAE","ignoreList":[0]}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}